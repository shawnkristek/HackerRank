from timeit import timeit

class Solution:
    @timeit
    def truck_tour(petrolpumps):
        start = 0
        gas_tank = 0

        for i in range(len(petrolpumps)):
            gas = petrolpumps[i][0]
            km = petrolpumps[i][1]
            gas_tank += gas - km
            if gas_tank < 0:
                start = i + 1
                gas_tank = 0
        return start

#testing
tests = [
    (
        [[1, 5], [10, 3], [3, 4]],
        1
    ),
    (
        [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]], 
        0
    ),
    (
        [[3, 5], [5, 2], [2, 4], [4, 3], [1, 3]], 
        1
    ),
    (
        [[1, 2], [5, 4], [3, 6], [6, 5], [2, 3]], 
        3
    ),
    (
        [[10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10], [10, 50], [50, 10]],
        1
    )
]

# run tests
for petrolpumps, solution in tests:
    sol = Solution.truck_tour(petrolpumps)
    print( sol )
    # assert sol == solution